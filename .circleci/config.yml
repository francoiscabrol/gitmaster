version: 2
jobs:
  build:
    working_directory: ~/build
    docker:
      - image: openjdk:8
    environment:
      SBT_VERSION: 0.13.15
    steps:
      - run: echo 'export ARTIFACT_BUILD=$CIRCLE_PROJECT_REPONAME-$CIRCLE_BUILD_NUM' >> $BASH_ENV
      - run:
          name: Get sbt binary
          command: |
                    apt update && apt install -y curl
                    curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
                    dpkg -i sbt-$SBT_VERSION.deb
                    rm sbt-$SBT_VERSION.deb
      - checkout
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: sbt-cache
      - run:
          name: Sbt assembly
          command: cat /dev/null | sbt assembly
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: gmaster
          destination: gmaster
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"
      - run: ./gmaster --version > version.txt
      - persist_to_workspace:
          root: ~/build
          paths:
            - gmaster
            - version.txt
      - deploy:
          command: |
              mv gmaster $CIRCLE_ARTIFACTS/$ARTIFACT_BUILD
  publish-github-release:
    working_directory: ~/build
    docker:
      - image: circleci/golang:1.8
    steps:
      - attach_workspace:
          at: ~/build
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$CIRCLE_TAG
            echo $VERSION
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./gmaster
workflows:
  version: 2
  workflow:
    jobs:
    - build:  # your custom job from your config, that builds your code
        filters:
          tags:
            only: /^\d+\.\d+\.\d+$/
    # On approval of the `hold` job, any successive job that requires the `hold` job will run.
    # In this case, a user is manually triggering the deploy job.
    - publish-github-release:
        context: GITHUB_GITMASTER
        requires:
          - build
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^\d+\.\d+\.\d+$/
